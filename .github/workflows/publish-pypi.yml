name: Publish Package to PyPI
run-name: "[Publish PyPI] Ref:${{ github.ref_name }} Event:${{ github.event_name }}"

on:
  workflow_call:
    inputs:
      python_version:
        required: false
        type: string
        default: '3.11'
        description: 'Python version to use'
      registry_url:
        required: false
        type: string
        default: 'https://pypi.org'
        description: 'PyPI registry URL'
      enable_provenance:
        required: false
        type: boolean
        default: true
        description: 'Whether to enable package provenance'
    secrets:
      PYPI_TOKEN:
        required: true
        description: 'PyPI token for publishing packages'
  release:
    types: [published]

jobs:
  verify-release:
    uses: ./.github/workflows/verify-release.yml

  publish:
    needs: [verify-release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment:
      name: pypi-publish
      url: https://pypi.org/project/${{ needs.verify-release.outputs.package_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version || '3.11' }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Verify package integrity
        run: |
          twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          if [ "${{ inputs.enable_provenance }}" = "true" ]; then
            twine upload --verbose dist/* --provenance
          else
            twine upload --verbose dist/*
